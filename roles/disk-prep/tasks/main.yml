###############################################################################
# Prepare the hard drive and mount the partitions
###############################################################################
---

- name: Partition the first hard drive
  command: "sgdisk {{ item }} {{ drive0 }}"
  with_items:
    - --zap-all
    - --new=1:0:+512M --typecode=1:EF00 --change-name=1:boot
    - --largest-new=2 --typecode=2:8309 --change-name=2:root0
  tags: partition

- name: Partition the second hard drive
  command: "sgdisk {{ item }} {{ drive1 }}"
  with_items:
    - --zap-all
    - --largest-new=1 --typecode=1:8309 --change-name=1:root1
  tags: partition

- name: Create the LVM2 physical volumes
  command: "pvcreate {{ item }}"
  with_items:
    - "{{ root_part0 }}"
    - "{{ root_part1 }}"

- name: Create the LVM2 volume group
  command: "vgcreate {{ volume_group }} {{ root_part0 }} {{ root_part1 }}"

- name: Create the LVM2 logical volume
  command: "lvcreate -l 100%FREE -n cryptroot {{ volume_group }}"

- name: Create a temp file for the encryption key
  tempfile:
    state: file
  register: keyfile
  tags:
    - encrypted
    - keyfile

- name: Put encryption key in the temp file
  copy:
    dest: "{{ keyfile.path }}"
    content: "{{ luks_pass }}"
    force: yes
  tags:
    - encrypted
    - keyfile

- name: Create the encrypted partition
  command: cryptsetup --batch-mode luksFormat "{{ lvroot }}" "{{ keyfile.path }}"
  tags: encrypted

- name: Open the encrypted partition
  command: cryptsetup open --key-file "{{ keyfile.path }}" "{{ lvroot }}" root
  args:
    creates: "{{ cryptroot }}"
  tags: encrypted

# Using shred here instead of the file module for extra security

- name: Remove the keyfile
  command: shred -u "{{ keyfile.path }}"
  args:
    removes: "{{ keyfile.path }}"
  tags: encrypted

- name: Format the boot partition
  filesystem:
    dev: "{{ boot_part }}"
    fstype: vfat
    opts: -F32
    force: yes
  tags: fsformat

- name: Format the root partition
  filesystem:
    dev: "{{ cryptroot }}"
    fstype: ext4
    force: yes
  tags: fsformat

- name: Set root partition reserved space
  command: tune2fs -m 1.0 "{{ cryptroot }}"
  tags: tune2fs

# These mount tasks also modify the /etc/fstab file, which we really don't need
# but I guess is harmless when done to the install media's root partition.

- name: Mount the new root partition
  mount:
    path: /mnt
    src: "{{ cryptroot }}"
    fstype: auto
    state: mounted
  tags: mount

- name: Mount the new boot partition
  mount:
    path: /mnt/boot
    src: "{{ boot_part }}"
    fstype: auto
    state: mounted
  tags: mount
